<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.atguigu.dao.OrderDao">


    <!-- 今日预约数 -->
    <!-- int getTodayOrderNumber(String today); -->
    <select id="getTodayOrderNumber" parameterType="string" resultType="int">
        SELECT COUNT(*) FROM t_order WHERE orderDate =#{data}
    </select>


    <!-- 今日已出游数 -->
    <!-- int getTodayVisitsNumber(String today); -->
    <select id="getTodayVisitsNumber" parameterType="string" resultType="int">
        select count(*) from t_order where orderStatus ='已出游'
    </select>


    <!-- 本月/本周预约数(>=本周的周一的日期 <=本周的周日的日期) -->
    <!-- int getThisWeekAndMonthOrderNumber(Map<String, Object> paramWeek); -->
    <select id="getThisWeekAndMonthOrderNumber" parameterType="map" resultType="int" >
        SELECT COUNT(id) FROM t_order WHERE orderDate BETWEEN #{begin} AND #{end}
    </select>


    <!-- 本月/本周已出游数 -->
    <!-- int getThisWeekAndMonthVisitsNumber(Map<String, Object> paramWeekVisit); -->
    <select id="getThisWeekAndMonthVisitsNumber" parameterType="map" resultType="int">
        SELECT COUNT(id) FROM t_order WHERE orderDate BETWEEN #{begin} AND #{end} AND orderStatus ='已出游'
    </select>


    <!-- 热门套餐 -->
    <!-- List<Map<String, Object>> findHotSetmeal(); -->
    <select id="findHotSetmeal" resultType="map">
        SELECT s.name name,COUNT(o.id) setmeal_count,s.price price,COUNT(o.id)/(SELECT COUNT(id) FROM t_order) proportion
        FROM t_setmeal s,t_order o WHERE s.id = o.setmeal_id
        GROUP BY s.name
        ORDER BY COUNT(o.id) DESC
            LIMIT 0,4
    </select>


    <!--  =========================================================================================  -->

    <!-- 根据预约id查询预约相关信息 -->
    <!-- Map findById(Integer id); -->

    <!--三张表联合查询-->
    <select id="findById" parameterType="int" resultType="map">
        <!-- select 每张表中需要获取的内容 -->
        select m.name member ,s.name setmeal ,o.orderDate orderDate,o.orderType orderType
        <!-- 三张表 + 别名 -->
        from
        t_order o,
        t_setmeal s,
        t_member m
        <!-- 这里写三张表的关联关系 -->
        <!-- (传参：Integer id) 先通过会员表的id获取套餐表中对应ID的套餐ID 从而获取套餐情况 -->
        where m.id=o.member_id and s.id = o.setmeal_id and o.id = #{id}
    </select>


    <!--  =========================================================================================  -->

    <!-- 根据 已知三个条件 查询是否存在重复订单 会员ID、时间日期、套餐ID -->
    <!-- List<Order> findByCondition(Order order); -->

    <!--组织预约的查询条件，查询预约信息，
       因为目前是三个预约条件查询，那么以后可能有4个，5个，甚至更多的条件查询，所以使用动态sql，全部查询
    -->

    <select id="findByCondition" parameterType="order" resultType="order">
        SELECT * FROM t_order
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="memberId != null">
                and member_id = #{memberId}
            </if>
            <if test="orderDate != null">
                and orderDate = #{orderDate}
            </if>
            <if test="orderType != null">
                and orderType = #{orderType}
            </if>
            <if test="orderStatus != null">
                and orderStatus = #{orderStatus}
            </if>
            <if test="setmealId != null">
                and setmeal_id = #{setmealId}
            </if>
        </where>
    </select>

    <!--  =========================================================================================  -->

    <!-- 保存预约信息到预约表 下单 -->
    <!-- void add(Order order); -->
    <insert id="add" parameterType="order">

        <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
            SELECT LAST_INSERT_ID()
        </selectKey>

        insert into t_order (member_id,orderDate,orderType,orderStatus,setmeal_id)
        values (#{memberId},#{orderDate},#{orderType},#{orderStatus},#{setmealId})

    </insert>

</mapper>
